<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <property> 
    <name>yarn.resourcemanager.connect.retry-interval.ms</name> 
    <value>2000</value> 
  </property>
  <property>
    <name>yarn.resourcemanager.zk-address</name>
    <value>{{ groups.zookeeper | join(":2181,") }}:2181</value>
  </property>
  <property>
    <name>yarn.acl.enable</name>
    <value>false</value>
  </property>
  <property>
    <name>yarn.admin.acl</name>
    <value>yarn,hadoop</value>
  </property>
  <property>
    <name>yarn.nodemanager.resource.memory-mb</name>
    <value>20480</value>
  </property>
  <property>
    <name>yarn.scheduler.minimum-allocation-mb</name>
    <value>2048</value>
  </property>
  <property>
    <name>yarn.scheduler.maximum-allocation-mb</name>
    <value>20480</value>
  </property>
  <property>
    <name>yarn.nodemanager.resource.cpu-vcores</name>
    <value>10</value>
  </property>
  <property>
    <name>yarn.resourcemanager.max-completed-applications</name>
    <value>5000</value>
  </property>
  <property>
    <name>yarn.nodemanager.aux-services</name>
    <value>mapreduce_shuffle</value>
  </property>
  <property>
    <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
    <value>org.apache.hadoop.mapred.ShuffleHandler</value>
  </property>
  <property>
    <name>yarn.nodemanager.local-dirs</name>
    <value>{{ hadoop_workspace | join('/nodemgr,') }}/nodemgr</value>
  </property>
  <property>
    <name>yarn.nodemanager.log-dirs</name>
    <value>{{ hadoop_workspace | join('/yarnLogs/userlogs,') }}/yarnLogs/userlogs</value>
  </property>
  <property>
    <name>yarn.log-aggregation-enable</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.log-aggregation.retain-seconds</name>
    <value>86400</value>
  </property>
  <property>
    <name>yarn.log-aggregation.retain-check-interval-seconds</name>
    <value>86400</value>
  </property>
  <property>
    <name>yarn.web-proxy.address</name>
    <value>{{ groups.proxyserver[0] }}:8089</value>
  </property>
  <property>
    <name>yarn.resourcemanager.nodes.exclude-path</name>
    <value>{{ hadoop_parent.stdout }}/hadoop-release/etc/hadoop/hosts.exclude</value>
  </property>
  <property>
    <name>yarn.resourcemanager.scheduler.class</name>
    <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.preemption</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.allocation.file</name>
    <value>{{ hadoop_parent.stdout }}/hadoop-release/etc/hadoop/fair-scheduler.xml</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.user-as-default-queue</name>
    <value>false</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.sizebasedweight</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.assignmultiple</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.max.assign</name>
    <value>4</value>
  </property>
  <property>
    <name>yarn.scheduler.fair.allow-undeclared-pools</name>
    <value>false</value>
  </property>
  <property>
    <name>yarn.resourcemanager.store.class</name>
    <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
  </property>
  <property>
    <name>yarn.resourcemanager.ha.automatic-failover.zk-base-path</name>
    <value>/yarn-leader-election</value>
  </property>
  <property>
    <name>yarn.resourcemanager.ha.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.resourcemanager.ha.rm-ids</name>
    <value>rm1,rm2</value>
  </property>

{% for r in groups['resourcemanager'] %}
  <property>
    <name>yarn.resourcemanager.hostname.rm{{ loop.index }}</name>
    <value>{{ r }}</value>
  </property>
  <property>
    <name>yarn.resourcemanager.webapp.https.address.rm{{ loop.index }}</name>
    <value>{{ r }}:8090</value>
  </property>
  <property>
    <name>yarn.resourcemanager.address.rm{{ loop.index }}</name>
    <value>{{ r }}:8032</value>
  </property>
  <property>
    <name>yarn.resourcemanager.admin.address.rm{{ loop.index }}</name>
    <value>{{ r }}:8033</value>
  </property>
  <property>
    <name>yarn.resourcemanager.scheduler.address.rm{{ loop.index }}</name>
    <value>{{ r }}:8030</value>
  </property>
  <property>
    <name>yarn.resourcemanager.resource-tracker.address.rm{{ loop.index }}</name>
    <value>{{ r }}:8031</value>
  </property>
{% endfor %}

  <property>
    <name>yarn.resourcemanager.recovery.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.resourcemanager.work-preserving-recovery.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.nodemanager.recovery.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>yarn.nodemanager.address</name>
    <value>${yarn.nodemanager.hostname}:45454</value>
  </property>
  <!-- RM SECURITY -->
  <property>
    <name>yarn.resourcemanager.principal</name>
    <value>yarn/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <property>
    <name>yarn.resourcemanager.keytab</name>
    <value>/etc/security/keytab/yarn.keytab</value>
  </property>
  <property>
    <name>yarn.http.policy</name>
    <value>HTTPS_ONLY</value>
  </property>
  <!-- NM SECURITY -->
  <property>
    <name>yarn.nodemanager.principal</name>
    <value>yarn/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <property>
    <name>yarn.nodemanager.keytab</name>
    <value>/etc/security/keytab/yarn.keytab</value>
  </property>
  <property>
    <name>yarn.nodemanager.container-executor.class</name>
    <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
  </property>
  <property>
    <name>yarn.nodemanager.linux-container-executor.group</name>
    <value>hadoop</value>
  </property>
  <property>
    <name>yarn.nodemanager.linux-container-executor.path</name>
    <value>{{ hadoop_parent.stdout }}/hadoop-release/bin/container-executor</value>
  </property>
  <!-- WEB PROXY SECURITY -->
  <property>
    <name>yarn.web-proxy.keytab</name>
    <value>/etc/security/keytab/yarn.keytab</value>
  </property>
  <property>
    <name>yarn.web-proxy.principal</name>
    <value>HTTP/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <!-- long running job - streaming -->
  <property>
    <name>yarn.resourcemanager.proxy-user-privileges.enabled</name>
    <value>true</value>
  </property>

  <!-- force set the yarn.log.server.url -->
  <property>
    <name>yarn.log.server.url</name>
    <value>https://{{ groups.historyserver[0] }}:19890/jobhistory/logs</value>
  </property>

  <property>
    <name>yarn.nodemanager.vmem-check-enabled</name>
    <value>false</value>
  </property>

  <property>
    <name>yarn.resourcemanager.cluster-id</name>
    <value>{{ cluster_name }}_yarn</value>
  </property>
</configuration>
