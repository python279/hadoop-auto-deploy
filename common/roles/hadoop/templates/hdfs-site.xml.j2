<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. -->
<!-- Put site-specific property overrides in this file. -->
<configuration>
  <property>
    <name>dfs.nameservices</name>
    <value>{{ cluster_name }}</value>
  </property>
  <property>
    <name>dfs.ha.namenodes.{{ cluster_name }}</name>
    <value>nn01,nn02</value>
  </property>

{% for n in groups['namenode'] %}
  <property>
    <name>dfs.namenode.rpc-address.{{ cluster_name }}.nn0{{ loop.index }}</name>
    <value>{{ n }}:9000</value>
  </property>
  <property>
    <name>dfs.namenode.https-address.{{ cluster_name }}.nn0{{ loop.index }}</name>
    <value>{{ n }}:50470</value>
  </property>
{% endfor %}

  <property>
    <name>dfs.webhdfs.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.permissions.enabled</name>
    <value>true</value>
    <final>true</final>
  </property>
  <property>
    <name>dfs.permissions.superusergroup</name>
    <value>hadoop</value>
  </property>
  <property>
    <name>dfs.permissions.supergroup</name>
    <value>hadoop</value>
  </property>
  <property>
    <name>dfs.cluster.administrators</name>
    <value>hadoop</value>
  </property>
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>{{ hadoop_namenode_dir }}</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>{{ hadoop_workspace | join("/dfs/data,") }}/dfs/data</value>
    <final>true</final>
  </property>
  <property>
    <name>dfs.replication</name>
    <value>3</value>
  </property>
  <property>
    <name>dfs.blocksize</name>
    <value>134217728</value>
  </property>
  <property>
    <name>dfs.datanode.balance.bandwidthPerSec</name>
    <value>50485760</value>
  </property>
  <property>
    <name>dfs.datanode.balance.max.concurrent.moves</name>
    <value>25</value>
  </property>
  <property>
    <name>dfs.datanode.scan.period.hours</name>
    <value>504</value>
    <final>true</final>
  </property>
  <property>
    <name>dfs.block.scanner.volume.bytes.per.second</name>
    <value>524288</value>
    <final>true</final>
  </property>
  <property>
    <name>dfs.hosts.exclude</name>
    <value>{{ hadoop_parent.stdout }}/hadoop-release/etc/hadoop/hosts.exclude</value>
    <final>true</final>
  </property>
  <property>
    <name>dfs.namenode.datanode.registration.ip-hostname-check</name>
    <value>false</value>
  </property>
  <property>
    <name>dfs.client.read.shortcircuit</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.domain.socket.path</name>
    <value>/var/lib/hadoop-hdfs/dn_socket</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir.perm</name>
    <value>700</value>
  </property>

  <property>
    <name>dfs.namenode.shared.edits.dir</name>
    <value>qjournal://{{ groups.journalnode | join(':8485;') }}:8485/{{ cluster_name }}</value>
  </property>

  <property>
    <name>dfs.journalnode.edits.dir</name>
    <value>{{ hadoop_journalnode_dir }}</value>
  </property>
  <property>
    <name>dfs.ha.fencing.methods</name>
    <value>sshfence
shell(/bin/true)</value>
  </property>
  <property>
    <name>dfs.ha.fencing.ssh.private-key-files</name>
    <value>/home/hdfs/.ssh/id_rsa</value>
  </property>
  <property>
    <name>dfs.ha.automatic-failover.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.client.failover.proxy.provider.{{ cluster_name }}</name>
    <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
  </property>

  <!--For standbynamenode checkpoint to activeNamenode by http-->
  <property>
    <name>dfs.image.transfer.timeout</name>
    <value>1800000</value>
  </property>
  <property>
    <name>dfs.image.transfer.bandwidthPerSec</name>
    <value>5242880</value>
  </property>
  <property>
    <name>dfs.namenode.checkpoint.period</name>
    <value>7200</value>
  </property>

  <!-- For Journalnode segment read and write -->
  <property>
    <name>dfs.qjournal.start-segment.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.prepare-recovery.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.accept-recovery.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.prepare-recovery.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.accept-recovery.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.finalize-segment.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
  <name>dfs.qjournal.select-input-streams.timeout.ms</name>
    <value>600000</value>
    </property>
  <property>
    <name>dfs.qjournal.get-journal-state.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.new-epoch.timeout.ms</name>
    <value>600000</value>
  </property>
  <property>
    <name>dfs.qjournal.write-txns.timeout.ms</name>
    <value>600000</value>
  </property>

  <!-- namenode security config -->
  <property>
    <name>dfs.block.access.token.enable</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.http.policy</name>
    <value>HTTPS_ONLY</value>
  </property>
  <property>
    <name>dfs.https.port</name>
    <value>50470</value>
  </property>
  <property>
    <name>dfs.namenode.keytab.file</name>
    <value>/etc/security/keytab/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.namenode.kerberos.principal</name>
    <value>hdfs/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <!-- datanode security config -->
  <property>
    <name>dfs.datanode.kerberos.principal</name>
    <value>hdfs/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <property>
    <name>dfs.datanode.keytab.file</name>
    <value>/etc/security/keytab/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir.perm</name>
    <value>700</value>
  </property>
  <!-- journalnode security config -->
  <property>
    <name>dfs.journalnode.kerberos.principal</name>
    <value>hdfs/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <property>
    <name>dfs.journalnode.keytab.file</name>
    <value>/etc/security/keytab/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.journalnode.kerberos.internal.spnego.principal</name>
    <value>HTTP/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <!-- datanode SASL config -->
  <property>
    <name>dfs.datanode.address</name>
    <value>0.0.0.0:50010</value>
  </property>
  <property>
    <name>dfs.datanode.http.address</name>
    <value>0.0.0.0:50075</value>
  </property>
  <property>
    <name>dfs.http.policy</name>
    <value>HTTPS_ONLY</value>
  </property>
  <property>
    <name>dfs.data.transfer.protection</name>
    <value>integrity</value>
  </property>
  <property>
    <name>dfs.web.authentication.kerberos.principal</name>
    <value>HTTP/_HOST@{{ domain1_upper }}.{{ domain2_upper }}</value>
  </property>
  <property>
    <name>dfs.web.authentication.kerberos.keytab</name>
    <value>/etc/security/keytab/hdfs.keytab</value>
  </property>
  <!-- namenode ACLs -->
  <property>
    <name>dfs.namenode.acls.enabled</name>
    <value>true</value>
  </property>
</configuration>

